!function(){$(function(){$(".tabs").each(function(){new e({obj:$(this),showType:2,activeIndex:function(e){console.log(e)}})})});var e=function(e){var t=this,n=e.obj,o=e.showType,i=e.activeIndex,s=$(window),c=n.find(">dl>dt"),a=n.find(">dl>dd"),d=!0,l=function(){1==o?n.addClass("tabs_animated1"):2==o&&n.addClass("tabs_animated2")},r=function(e){setTimeout(function(){e.niceScroll({cursorcolor:"#fec303",cursoropacitymin:"1",cursorborderradius:"2px",cursorborder:"none",background:"#3d3e42",cursorwidth:"5px",enablemousewheel:!0})},500)},u=function(e){var t=e,n=t.next();n.find(".tabs__content");t.hasClass("active")||(c.removeClass("active"),v(a),t.addClass("active"),r(n),C(n)),i(t.index()/2)},f=function(){var e=document.createElement("p");e.style.width="100%",e.style.height="200px";var t=document.createElement("div");t.style.position="absolute",t.style.top="0px",t.style.left="0px",t.style.visibility="hidden",t.style.width="200px",t.style.height="150px",t.style.overflow="hidden",t.appendChild(e),document.body.appendChild(t);var n=e.offsetWidth;t.style.overflow="scroll";var o=e.offsetWidth;return n==o&&(o=t.clientWidth),document.body.removeChild(t),n-o},v=function(e){e.getNiceScroll().remove()},h=function(){c.on({click:function(){s.width()<1024-f()?b($(this)):u($(this))}}),s.on({load:function(){s.width()>=1024-f()?(p(),y(),d=!1):d=!0},resize:function(){s.width()>=1024?(p(),y(),d=!1):(w(),v(a),d=!0)}})},m=function(){n[0].obj=t,h(),l()},p=function(){a.css({top:c.eq(-1).position().top+c.eq(-1).innerHeight()})},y=function(){d&&(c.eq(0).addClass("active"),r(c.eq(0).next()))},b=function(e){var t=e,n=t.next();n.find(".tabs__content");t.hasClass("active")?(t.removeClass("active"),n.removeAttr("style")):(c.removeClass("active"),a.removeAttr("style"),t.addClass("active"),n.css({display:"block"}))},w=function(){n.removeAttr("style"),c.removeClass("active"),a.removeAttr("style")},C=function(e){setTimeout(function(){e.getNiceScroll().resize()},350)};m()}}();
//# sourceMappingURL=data:application/json;base64,
