!function(){$(function(){"use strict";$(".main-slider").each(function(){new i($(this))})});var i=function(i){var n=this,e=i,t=e.find(".swiper-container"),s=e.find(".swiper-container"),o=e.find(".swiper-slide"),c=e.find(".main-slider__count-all"),d=$(".site__header"),a=$(".site__footer"),l=e.find(".main-slider__count-current"),r=$(window),h=function(){r.on({resize:function(){r.width()>=768&&r.width()<1024?p():e.attr("style","")}})},u=function(){t=new Swiper(s,{paginationClickable:!0,nextButton:".swiper-button-next",spaceBetween:30,loop:!0,loopedSlides:0,loopAdditionalSlides:0,onInit:function(i){var n=i.activeIndex,e=o.length;n<10?n="0"+n:0==n[0]&&(n=n.slice(1)),e<10&&(e="0"+e),c.text(e),l.text(n)},onSlideChangeStart:function(i){var n=i.activeIndex;n<10?n="0"+n:0==n[0]&&(n=n.slice(1)),$(i.slides).eq(n).hasClass("swiper-slide-duplicate")&&$(i.slides).eq(n).index()>o.length&&(n="01"),l.text(n)}})},f=function(){e[0].obj=n,u(),p(),h()},p=function(){r.height()>=500?e.css({"min-height":r.height()-d.innerHeight()-a.innerHeight()}):e.css({"min-height":"400px"})};f()}}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5pbmRleC5qcyJdLCJuYW1lcyI6WyIkIiwiZWFjaCIsIkluZGV4U2xpZGVyIiwidGhpcyIsIm9iaiIsIl9zZWxmIiwiX29iaiIsIl9zbGlkZXIiLCJmaW5kIiwiX3NsaWRlckNvbnRhaW5lciIsIl9zbGlkZXMiLCJfY291bnRBbGwiLCJfaGVhZGVyIiwiX2Zvb3RlciIsIl9jb3VudEN1ciIsIl93aW5kb3ciLCJ3aW5kb3ciLCJfYWRkRXZlbnRzIiwib24iLCJyZXNpemUiLCJ3aWR0aCIsIl9zZXRIZWlnaHQiLCJhdHRyIiwiX2luaXRTbGlkZXIiLCJTd2lwZXIiLCJwYWdpbmF0aW9uQ2xpY2thYmxlIiwibmV4dEJ1dHRvbiIsInNwYWNlQmV0d2VlbiIsImxvb3AiLCJsb29wZWRTbGlkZXMiLCJsb29wQWRkaXRpb25hbFNsaWRlcyIsIm9uSW5pdCIsInN3aXBlciIsImN1ckluZGV4IiwiYWN0aXZlSW5kZXgiLCJhbGxFbGVtTGVuZ3RoIiwibGVuZ3RoIiwic2xpY2UiLCJ0ZXh0Iiwib25TbGlkZUNoYW5nZVN0YXJ0Iiwic2xpZGVzIiwiZXEiLCJoYXNDbGFzcyIsImluZGV4IiwiX2luaXQiLCJoZWlnaHQiLCJjc3MiLCJtaW4taGVpZ2h0IiwiaW5uZXJIZWlnaHQiXSwibWFwcGluZ3MiOiJDQUFBLFdBRUlBLEVBQUcsV0FDQyxZQUVBQSxHQUFHLGdCQUFpQkMsS0FBTSxXQUN0QixHQUFJQyxHQUFhRixFQUFHRyxVQUs1QixJQUFJRCxHQUFjLFNBQVVFLEdBR3hCLEdBQUlDLEdBQVFGLEtBQ1JHLEVBQU9GLEVBQ1BHLEVBQVVELEVBQUtFLEtBQUsscUJBQ3BCQyxFQUFtQkgsRUFBS0UsS0FBSyxxQkFDN0JFLEVBQVVKLEVBQUtFLEtBQUssaUJBQ3BCRyxFQUFZTCxFQUFLRSxLQUFLLDJCQUN0QkksRUFBVVosRUFBRyxpQkFDYmEsRUFBVWIsRUFBRyxpQkFDYmMsRUFBWVIsRUFBS0UsS0FBSywrQkFDdEJPLEVBQVVmLEVBQUdnQixRQUdiQyxFQUFhLFdBRVRGLEVBQVFHLElBRUpDLE9BQVEsV0FFRUosRUFBUUssU0FBVyxLQUFXTCxFQUFRSyxRQUFVLEtBRWxEQyxJQUdBZixFQUFLZ0IsS0FBTSxRQUFTLFFBU3BDQyxFQUFjLFdBQ1ZoQixFQUFVLEdBQUlpQixRQUFRZixHQUNsQmdCLHFCQUFxQixFQUNyQkMsV0FBWSxzQkFDWkMsYUFBYyxHQUNkQyxNQUFNLEVBQ05DLGFBQWMsRUFDZEMscUJBQXNCLEVBQ3RCQyxPQUFRLFNBQVVDLEdBRWQsR0FBSUMsR0FBV0QsRUFBT0UsWUFDbEJDLEVBQWdCekIsRUFBUTBCLE1BRXhCSCxHQUFXLEdBQ1hBLEVBQVcsSUFBTUEsRUFDTyxHQUFmQSxFQUFTLEtBQ2xCQSxFQUFXQSxFQUFTSSxNQUFNLElBSTFCRixFQUFnQixLQUNoQkEsRUFBZ0IsSUFBTUEsR0FHMUJ4QixFQUFVMkIsS0FBTUgsR0FDaEJyQixFQUFVd0IsS0FBTUwsSUFFcEJNLG1CQUFvQixTQUFVUCxHQUUxQixHQUFJQyxHQUFXRCxFQUFPRSxXQUVsQkQsR0FBVyxHQUNYQSxFQUFXLElBQU1BLEVBQ0ssR0FBZkEsRUFBUyxLQUNoQkEsRUFBV0EsRUFBU0ksTUFBTSxJQUcxQnJDLEVBQUdnQyxFQUFPUSxRQUFTQyxHQUFJUixHQUFXUyxTQUFVLDJCQUE4QjFDLEVBQUdnQyxFQUFPUSxRQUFTQyxHQUFJUixHQUFXVSxRQUFVakMsRUFBUTBCLFNBQzlISCxFQUFXLE1BR2ZuQixFQUFVd0IsS0FBS0wsT0FNM0JXLEVBQVEsV0FDSnRDLEVBQU0sR0FBSUYsSUFBTUMsRUFDaEJrQixJQUNBRixJQUNBSixLQUVKSSxFQUFhLFdBRUxOLEVBQVE4QixVQUFZLElBRXBCdkMsRUFBS3dDLEtBRURDLGFBQWNoQyxFQUFROEIsU0FBV2pDLEVBQVFvQyxjQUFnQm5DLEVBQVFtQyxnQkFNckUxQyxFQUFLd0MsS0FFREMsYUFBYyxVQWE5QkgiLCJmaWxlIjoiaW5kZXgubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKCBmdW5jdGlvbigpe1xuXG4gICAgJCggZnVuY3Rpb24oKSB7XG4gICAgICAgICd1c2Ugc3RyaWN0JztcblxuICAgICAgICAkKCAnLm1haW4tc2xpZGVyJyApLmVhY2goIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbmV3IEluZGV4U2xpZGVyKCAkKCB0aGlzICkgKTtcbiAgICAgICAgfSApO1xuXG4gICAgfSApO1xuXG4gICAgdmFyIEluZGV4U2xpZGVyID0gZnVuY3Rpb24oIG9iaiApIHtcblxuICAgICAgICAvL3ByaXZhdGUgcHJvcGVydGllc1xuICAgICAgICB2YXIgX3NlbGYgPSB0aGlzLFxuICAgICAgICAgICAgX29iaiA9IG9iaixcbiAgICAgICAgICAgIF9zbGlkZXIgPSBfb2JqLmZpbmQoJy5zd2lwZXItY29udGFpbmVyJyksXG4gICAgICAgICAgICBfc2xpZGVyQ29udGFpbmVyID0gX29iai5maW5kKCcuc3dpcGVyLWNvbnRhaW5lcicpLFxuICAgICAgICAgICAgX3NsaWRlcyA9IF9vYmouZmluZCgnLnN3aXBlci1zbGlkZScpLFxuICAgICAgICAgICAgX2NvdW50QWxsID0gX29iai5maW5kKCcubWFpbi1zbGlkZXJfX2NvdW50LWFsbCcpLFxuICAgICAgICAgICAgX2hlYWRlciA9ICQoICcuc2l0ZV9faGVhZGVyJyApLFxuICAgICAgICAgICAgX2Zvb3RlciA9ICQoICcuc2l0ZV9fZm9vdGVyJyApLFxuICAgICAgICAgICAgX2NvdW50Q3VyID0gX29iai5maW5kKCcubWFpbi1zbGlkZXJfX2NvdW50LWN1cnJlbnQnKSxcbiAgICAgICAgICAgIF93aW5kb3cgPSAkKCB3aW5kb3cgKTtcblxuICAgICAgICAvL3ByaXZhdGUgbWV0aG9kc1xuICAgICAgICB2YXIgX2FkZEV2ZW50cyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgX3dpbmRvdy5vbigge1xuXG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZTogZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggKCBfd2luZG93LndpZHRoKCkgPj0gNzY4ICkgJiYgKCBfd2luZG93LndpZHRoKCkgPCAxMDI0ICkgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfc2V0SGVpZ2h0KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX29iai5hdHRyKCAnc3R5bGUnLCAnJyApXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSApO1xuXG5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfaW5pdFNsaWRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIF9zbGlkZXIgPSBuZXcgU3dpcGVyKCBfc2xpZGVyQ29udGFpbmVyICwge1xuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uQ2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuZXh0QnV0dG9uOiAnLnN3aXBlci1idXR0b24tbmV4dCcsXG4gICAgICAgICAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMzAsXG4gICAgICAgICAgICAgICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGxvb3BlZFNsaWRlczogMCxcbiAgICAgICAgICAgICAgICAgICAgbG9vcEFkZGl0aW9uYWxTbGlkZXM6IDAsXG4gICAgICAgICAgICAgICAgICAgIG9uSW5pdDogZnVuY3Rpb24oIHN3aXBlciApIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGN1ckluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbEVsZW1MZW5ndGggPSBfc2xpZGVzLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoIGN1ckluZGV4IDwgMTAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VySW5kZXggPSAnMCcgKyBjdXJJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSAgaWYgKCBjdXJJbmRleFswXSA9PSAwICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1ckluZGV4ID0gY3VySW5kZXguc2xpY2UoMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoIGFsbEVsZW1MZW5ndGggPCAxMCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGxFbGVtTGVuZ3RoID0gJzAnICsgYWxsRWxlbUxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgX2NvdW50QWxsLnRleHQoIGFsbEVsZW1MZW5ndGggKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jb3VudEN1ci50ZXh0KCBjdXJJbmRleCApO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvblNsaWRlQ2hhbmdlU3RhcnQ6IGZ1bmN0aW9uKCBzd2lwZXIgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGN1ckluZGV4IDwgMTApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJJbmRleCA9ICcwJyArIGN1ckluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjdXJJbmRleFswXSA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VySW5kZXggPSBjdXJJbmRleC5zbGljZSgxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoICQoIHN3aXBlci5zbGlkZXMgKS5lcSggY3VySW5kZXggKS5oYXNDbGFzcyggJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUnICkgJiYgJCggc3dpcGVyLnNsaWRlcyApLmVxKCBjdXJJbmRleCApLmluZGV4KCkgPiBfc2xpZGVzLmxlbmd0aCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJJbmRleCA9ICcwJyArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIF9jb3VudEN1ci50ZXh0KGN1ckluZGV4KTtcblxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9ICk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX2luaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBfb2JqWyAwIF0ub2JqID0gX3NlbGY7XG4gICAgICAgICAgICAgICAgX2luaXRTbGlkZXIoKTtcbiAgICAgICAgICAgICAgICBfc2V0SGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgX2FkZEV2ZW50cygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9zZXRIZWlnaHQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICBpZiggX3dpbmRvdy5oZWlnaHQoKSA+PSA1MDAgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgX29iai5jc3MoIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgJ21pbi1oZWlnaHQnOiBfd2luZG93LmhlaWdodCgpIC0gX2hlYWRlci5pbm5lckhlaWdodCgpIC0gX2Zvb3Rlci5pbm5lckhlaWdodCgpXG5cbiAgICAgICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICBfb2JqLmNzcygge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAnbWluLWhlaWdodCc6ICc0MDBweCdcblxuICAgICAgICAgICAgICAgICAgICB9ICk7XG5cbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgfTtcblxuICAgICAgICAvL3B1YmxpYyBwcm9wZXJ0aWVzXG5cbiAgICAgICAgLy9wdWJsaWMgbWV0aG9kc1xuXG4gICAgICAgIF9pbml0KCk7XG4gICAgfTtcblxufSApKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
